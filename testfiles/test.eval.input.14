;;Homework 4
;;4/9/18

;;Takes a two parameter function f and converts it to a curried version
(define curry2
  (lambda (f)
    (lambda (x)
      (lambda (y)
        (f x y)))))

;;Tests for curry2
(((curry2 (lambda (x y) (+ x y))) 7) 5)
(((curry2 (lambda (x y) (+ x y))) 5) 7)

;;Takes a one parameter predicate and returns a predicate that is the negation
;;of predicate
(define negate
  (lambda (predicate)
    (lambda (x)
      (if (predicate x) #f (predicate x)))))

;;Tests for negate
((negate null?) (quote ()))
;((negate integer?) 2.5)
