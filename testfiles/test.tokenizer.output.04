(:open
define:symbol
curry2:symbol
(:open
lambda:symbol
(:open
f:symbol
):close
(:open
lambda:symbol
(:open
x:symbol
):close
(:open
lambda:symbol
(:open
y:symbol
):close
(:open
f:symbol
x:symbol
y:symbol
):close
):close
):close
):close
):close
(:open
check-equal?:symbol
(:open
(:open
(:open
curry2:symbol
(:open
lambda:symbol
(:open
x:symbol
y:symbol
):close
(:open
*:symbol
x:symbol
y:symbol
):close
):close
):close
7:integer
):close
5:integer
):close
35:integer
):close
(:open
check-equal?:symbol
(:open
(:open
(:open
curry2:symbol
(:open
lambda:symbol
(:open
x:symbol
y:symbol
):close
(:open
-:symbol
x:symbol
y:symbol
):close
):close
):close
5:integer
):close
7:integer
):close
-2:integer
):close
(:open
define:symbol
negate:symbol
(:open
lambda:symbol
(:open
predicate:symbol
):close
(:open
lambda:symbol
(:open
x:symbol
):close
(:open
not:symbol
(:open
predicate:symbol
x:symbol
):close
):close
):close
):close
):close
(:open
check-equal?:symbol
(:open
(:open
negate:symbol
null?:symbol
):close
(:open
):close
):close
#f:boolean
):close
(:open
check-equal?:symbol
(:open
(:open
negate:symbol
integer?:symbol
):close
2.5:double
):close
#t:boolean
):close
